{"version":3,"sources":["styles/View.module.css","styles/Home.module.css","styles/Loader.module.css","styles/Header.module.css","components/header.js","components/model.js","components/TextMessage.js","components/message.js","components/Home.js","components/Loader.js","components/View.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","state","className","Component","Model","TextMessage","onClick","event","message","onChange","e","setState","target","value","this","Message","src","Home","styles","container","type","ArView","entryId","arview","title","iframe","id","messageRef","useFirestore","collection","doc","audioMessage","useFirestoreDocData","useStorage","ref","audioUrl","useStorageDownloadURL","console","log","msg","url","playing","volume","autoplay","to","button","View","useParams","fallback","Loader","traceId","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.65370319.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"View_container__2eK60\",\"arview\":\"View_arview__X1lya\",\"iframe\":\"View_iframe__El5x-\",\"msg\":\"View_msg__2Vfpr\",\"button\":\"View_button__1JzeH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__2iZFP\",\"body\":\"Home_body__NS1bU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Loader_container__KTTuq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__HLSq6\",\"title\":\"Header_title__2RcxF\"};","import React, { Component } from 'react';\r\nimport styles from '../styles/Header.module.css';\r\n\r\nexport default class Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={'header'}>\r\n        <div className={'title'}>\r\n          <h1>Working Name</h1>\r\n        </div>\r\n\r\n        <div className='instructions'>\r\n          <p>Instructions for using this web app and sending compliments</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Model extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={\"model\"}>\r\n                <h3>Choose something to send to your friend!</h3>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class TextMessage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            message: \"\",\r\n        }\r\n    }\r\n\r\n    onClick = event => {\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"TextMessage\">\r\n                <textarea onChange={e => this.setState({ message: e.target.value })} value={this.state.message} />\r\n                <button onClick={this.onClick}></button>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport TextMessage from './TextMessage'\r\n\r\nexport default class Message extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={\"message\"}>\r\n                <TextMessage>\r\n\r\n                </TextMessage>\r\n                <script src=\"https://code.responsivevoice.org/responsivevoice.js?key=B5AXjDdu\"></script>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Component } from 'react';\r\nimport styles from '../styles/Home.module.css';\r\n\r\nimport Header from './header.js';\r\nimport Model from './model.js';\r\nimport Message from './message.js';\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className={styles.container}>\r\n        <Header></Header>\r\n\r\n        <div className={'body'}>\r\n          <Model className={'model'}></Model>\r\n          <Message className={'message'}></Message>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport styles from '../styles/Loader.module.css';\r\nimport Loader from 'react-loaders';\r\n\r\nexport default () => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <Loader type='ball-rotate' />;\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styles from '../styles/View.module.css';\r\nimport {\r\n  useFirestoreDocData,\r\n  useStorage,\r\n  useFirestore,\r\n  SuspenseWithPerf,\r\n  useStorageDownloadURL,\r\n} from 'reactfire';\r\n\r\nimport Loader from '../components/Loader';\r\n\r\nimport {\r\n  Link,\r\n  useParams,\r\n} from 'react-router-dom';\r\nimport ReactPlayer from 'react-player';\r\n\r\nconst ArView = ({ entryId }) => {\r\n  const link = false\r\n    ? `https://console.echoAR.xyz/webar?key=${'calm-mud-3261'}&entry=${entryId}`\r\n    : 'http://google.com/';\r\n  return (\r\n    <div className={styles.arview}>\r\n      <iframe title='ok' className={styles.iframe} src={link} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Message = ({ id }) => {\r\n  const messageRef = useFirestore().collection('message').doc(id);\r\n  const message = useFirestoreDocData(messageRef);\r\n\r\n  var audioMessage = useStorage().ref('original audio.wav');\r\n  var audioUrl = useStorageDownloadURL(audioMessage);\r\n\r\n  console.log(audioUrl);\r\n\r\n  return (\r\n    <div className={styles.msg}>\r\n      <ArView entryId={'d8b19562-502c-4e12-a4a3-3dc853c08211'}></ArView>\r\n      <ReactPlayer\r\n        url={audioUrl}\r\n        playing={true}\r\n        volume={1}\r\n        // controls={true}\r\n        autoplay={true}\r\n      ></ReactPlayer>\r\n      <Link to='/'>\r\n        <button className={styles.button}>Send A Message</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst View = () => {\r\n  let { id } = useParams();\r\n  console.log(id);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <SuspenseWithPerf\r\n        fallback={<Loader></Loader>}\r\n        traceId={'load-message-status'}\r\n      >\r\n        <Message id={id} />\r\n      </SuspenseWithPerf>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default View;\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { FirebaseAppProvider } from 'reactfire';\r\n\r\nimport Home from './components/Home';\r\nimport View from './components/View';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyCblFEhn6FKGMYSaBeKLWLiojJaqxRABpI',\r\n  authDomain: 'wics-app-8c601.firebaseapp.com',\r\n  databaseURL: 'https://wics-app-8c601.firebaseio.com',\r\n  projectId: 'wics-app-8c601',\r\n  storageBucket: 'wics-app-8c601.appspot.com',\r\n  messagingSenderId: '1042898649667',\r\n  appId: '1:1042898649667:web:59908e029a4591ec7ccaf6',\r\n  measurementId: 'G-5F3SMMMTJ3',\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <FirebaseAppProvider firebaseConfig={firebaseConfig}>\r\n      <Router>\r\n        <Switch>\r\n          <Route path='/view/:id'>\r\n            <View />\r\n          </Route>\r\n          <Route path='/'>\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </FirebaseAppProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}